1. NestJS-Application - Cookie-Session

1-1. main.ts에서 app.use(cookieSession({keys : ['임의의 문자열']}))
=> 세션을 쿠키에 저장하고 관리하는 역할을 합니다.
=> 세션 데이터를 서버에 저장하지 않습니다. 클라이언트에 데이터를 저장합니다.

=> 쿠키를 확인하여 세션 데이터를 복원합니다.
=> 컨트롤러에서 @Session() 데코레이터를 통해 세션을 사용할 수 있습니다.
=> 새로운 세션 값이 설정되면 쿠키를 업데이트하여 클라이언트에게 반환합니다.
=> 클리이언트가 이후 요청을 보낼 때 해당 쿠키와 함께 보냅니다.

=> keys : ['asd...']
=> 쿠키 데이터를 암호화하는 키를 의미합니다.
=> keys가 없다면 쿠키의 내용을 그대로 노출하여 보안에 취약합니다.


1-2. Flow
1. 로그인이나 테스트를 통해 요청을 보냅니다.
2. @Session() session : any 인자를 통해 session에 접근할 수 있습니다.
3. session.color = 'red', session.zus = 'zustand' 처럼 조작할 수 있습니다.
4. 해당 컨트롤러에서 아무것도 return 하지 않아도 session이 존재한다면 keys:['...']의 
 임의의 문자열을 통해 세션이 암호화되고 header의 set-Cookie를 통해 응답됩니다.

5. 쿠키를 받은 클라이언트는 다음 요청부터 쿠키를 포함한채 요청을 보냅니다.
6. 쿠키를 포함한 요청을 받은 서버는 쿠키를 컨트롤러에 보내기 전에 keys:['..']와 함께 복호화를 실행합니다.
7. 복호화된 쿠키를 컨트롤러에게 보내서 session.color는 제대로 된 값을 얻을 수 있습니다.