1. UseInterceptors 데코레이터
=> 특정 인터셉터를 라우트 핸들러나 컨트롤러에 적용하기 위해 사용됩니다. 
=> 라우트 핸들러가 실행되기 전과 후에 해당 인터셉터가 동작합니다.


2. ClassSerializerInterceptor
=> 라우트 핸들러의 응답을 직렬화하는 작업을 실행합니다.
=> class-transformer 라이브러리를 내부적으로 사용합니다.

=> 응답 객체를 class-transformer의 plainToClass 메서드를 통해 직렬화합니다.
=> 이 직렬화 과정에서  @Exclude와 @Expose 데코레이터가 적용된 속성들이 처리되고,
 응답 객체에서 제외되거나 변형됩니다.
=> 응답 객체가 JSON 형식으로 변환되어 클라이언트에게 return 합니다.


3. Flow
3-1. 요청이 들어옵니다.
3-2. 들어온 요청이 컨트롤러에 가기 전에 인터셉터에서 특정 작업을 수행하거나 그냥 넘겨줍니다.
3-3. 라우트 핸들러에서 주입받은 service를 실행하여 데이터를 가공합니다.
3-4. 가공한 데이터(엔티티 인스턴스, 일반 객체.. 등)를 인터셉터가 가로채어 작업을 수행합니다.
3-5. 인터셉터에서 작업한 데이터를 응답을 return 합니다.

