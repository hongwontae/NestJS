1. DTO가 아닌 엔티티에 class-validator같은 검사 로직을 연결할 수 있습니다.
=> 이러한 유효성 검사를 하기 위해서는 인스턴스가 필요합니다.
=> create로 Entity 인스턴스 생성 => 검사 단계 수행 => Save 호출


2. create, save
2-1. repo의 create 메서드는 엔티티 Instance를 생성합니다.
=> 엔티티 인스턴스를 저장하면 인스턴스에 연결된 모든 후크가 실행됩니다.

2-2. repo의 save 메서드는 엔티티 Instance나 객체를 받아서 실제 DB에 저장합니다.
=> 객체를 넘기면 후크가 실행되지 않습니다.


3. 후크란?


4. remove() vs delete()
=> remove()는 후크 실행, delete()는 후크를 실행하지 않습니다.


5. insert(), update()
=> 기본 객체를 통해서 데이터를 저장하거나 업데이트 하지만 후크를 실해하지 않습니다.


6. 서비스에서 에러를 던지면 다른 모듈의 컨트롤러가 에러를 던진 서비스를 실행하기 어렵습니다.
