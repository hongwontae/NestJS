1. APP_PIPE
=> NestJS가 제공하는 토큰으로, 특정 파이프를 애플리케이션 전체에 적용할 때 사용합니다.
=> NestJS 애플리케이션이 해당 string을 읽고 해당 모듈에 들어오는 요청에 대한 파이프를 설정합니다.


2. useValue : new ValidationPipe({..})
=> 파이프에 대한 구체적인 설정을 생성된 인스턴스를 직접 제공하는 방식입니다.


3. configure 메서드
=> NestJS 모듈 내에서 미들웨어를 설정하는 메서드입니다.
=> MiddlewareConsumer를 인자로 받아 미들웨어를 설정하고, 이를 어떤 라우트에 적용할지 지정합니다.
=> consumer.apply()는 미들웨어를 애플리케이션에 적용하는 역할을 합니다.
 이 메서드를 통해 하나 이상의 미들웨어를 지정할 수 있습니다.
=> forRoutes('*') : 모든 라우트에 미들웨어를 적용한다는 의미입니다.
=> forRoutes('login'), login 라우트에만 적용하겠다.

=> export class AppModue {
    congifure((consumer : MiddlewareConsumer)=>{
        consumer.apply(
            cookieSession({
                keys : ['asdfasd']
            })
        ).forRoutes('*')
    })
}