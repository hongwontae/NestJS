1. 레파지토리 의존성 사용하기
1-1. constructor(@InjectRepository(UsersEntity) private repo : Repository<UsersEntity>){}
    1. repo : Repository<UsersEntity>를 통해서 repo에 타입을 설정합니다.
    2. @InjectRepository(UsersEntity)를 통해서 DI 컨테이너에 엔티티에 해당하는 Repository 객체를 생성
        + 생성된 Repository를 repo 변수에 주입합니다.


2. 레파지토리 메서드
2-1. create()
=> 엔티티 인스턴스를 생성합니다.

2-2. save()
=> 일반 객체나 엔티티 인스턴스를 받아서 DB에 저장합니다.




3. Entity에서 사용 가능한 메서드
3-1. @AfterInsert()
=> 데이터베이스에 데이터가 삽입될 떄마다 데코가 적용된 함수가 실행됩니다.

3-2. @AfterUpdate()
=> 데이터베이스에 데이터가 업데이트 때마다 데코가 적용된 함수가 실행됩니다.

3-3. @AfterRemove()
=> 데이터베이스에 데이터가 삭제될 떄마다 데코가 적용된 함수가 실행됩니다.
** create로 엔티티 인스턴스를 만들고 save를 호출해야 위 3개의 후크가 실행됩니다. **

        
