1. NestJS Application를 생성하기 위해서
1-1. npm list -g
1-2. @nestjs/cli가 존재한다면 nest new filename을 통해 NestJS 프레임워크를 생성합니다.
1-3. 존재하지 않는다면 @nestjs/cli를 설치한 다음 명령어를 입력하면 됩니다.


2. 앱이 시작되면 main.ts를 실행합니다.
=> async function bootstrap(){}를 실행합니다.
=> boostrap에는 const app = await NestFactory.create(); await app.listen(process.env.PORT || 3000)
이 존재합니다. 이 두 가지 코드는 대부분 같습니다.

2-1. NestFactory.create()는 AppModule를 초기화합니다.
2-2. DI 컨테이너 생성, LifeCycle Hooks 실행, Express or Fastify 서버 인스턴스 등의 작업을 합니다.


3. Module + 초기화 작업 순서
3-1. imports, providers, exports, controllers
=> 만약 두 개의 모듈이 서로 imports하고 exports 한다면 순환 참조 문제 발생합니다.
=> 이 떄 forwardRef()를 사용한 lazy loading, 공통 모듈을 만들어서 해결합니다.

3-2. Module이 exports를 해야 다른 모듈이 imports하여 받을 수 있습니다.

