1. 의존성이란?
=> 한 클래스가 다른 클래스를 필요로 하는 관계를 의미합니다.
=> A가 B를 필요로 한다면, A는 B에 의존하고 있다고 표현합니다.


2. 의존성 강한 결합
=> A 클래스가 B 클래스 객체를 직접 생성하는 경우 강한 결합으로 재사용이 어렵습니다.
2-1. B의 구현이 constructor를 통해 인자를 받아야 되는 상황이라면? => A의 코드도 바꿔야 합니다.
2-2. A 클래스가 C나 D 클래스 객체를 받고 싶다면? => 직접 변경해야 합니다.
2-3. A 클래스의 테스트하려고 하면 문제가 발생합니다. 
=> A를 테스트하면 B의 실제 구현이 필요합니다.
=> 가짜 객체(Mock Object)를 써서 독립적으로 실행하는게 좋은데 강한 결합은 이러한 설정이 불가능합니다.



3. 의존성 주입
=> A 클래스가 B 클래스 객체를 직접 생성하는게 아니라 외부에서 주입받는 개념입니다.
=> A는 B가 어떻게 생성되는지 신경 쓰지 않아도 됩니다.
=> 주로 인자로 받는 형태입니다.